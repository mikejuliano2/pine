//@version=5
indicator(title="MJ - RTH VWAP", shorttitle="MJ - RTH VWAP", overlay=true)

input_rth = input.session("0930-1600", title="Regular Session Time (EST)", tooltip="If you want to get full session (including overnight) high/low values, then change the regular session interval.  For example, on a 5-mninute chart, 1800-1655 will provide the high and low for the full daily session.")
rth_session = time("1440",str.format("{0}:23456", input_rth), "America/New_York")

var cumVol = 0.
cumVol += nz(volume)

groupShared = 'Shared'
inlineDev = 'Deviations'
inlineSharedStyles = 'Styling'
inlineSharedToggles = 'Toggles'

hideonDWM = input(false, title="Hide VWAP 1D / Above", group=groupShared, inline=inlineSharedToggles)
showBands = input(true, title="Show Bands", group=groupShared, inline=inlineSharedToggles)
// TrackCloses = input(false, title="Track Dates", group=groupShared, inline=inlineSharedToggles)

stdevMult = input.float(1.0, title="B1", group=groupShared, inline=inlineDev, step=0.5)
stdevMult2 = input.float(1.5, title="B2", group=groupShared, inline=inlineDev, step=0.5)
stdevMult3 = input.float(2.0, title="B3", group=groupShared, inline=inlineDev, step=0.5)

VwapStyle = input.string("line", options = ["circles","line","cross"],title = "VWAP", group=groupShared, inline=inlineSharedStyles)
//CloseStyle = input.string("circles", options = ["circles","line","cross"],title = "Close", group=groupShared, inline=inlineSharedStyles)
BandStyle = input.string("line", options = ["circles","line","cross"],title = "Bands", group=groupShared, inline=inlineSharedStyles)
plotStylePVA = input.string("line", options = ["circles","line","cross"],title = "PVA", group=groupShared, inline=inlineSharedStyles)
plotStylePpoc = input.string("cross", options = ["circles","line","cross"],title = "PPOC", group=groupShared, inline=inlineSharedStyles)

LabelSize = input.string("small", options = ["small","medium","large"],title = "Label Size", group=groupShared, inline=inlineSharedStyles)
labelOffset = input.int(0, title="Label Offset", group=groupShared, inline=inlineSharedStyles)

_getLineStyle(_style) => (_style == "line") ? plot.style_line : (_style == "circles") ? plot.style_circles : (_style == "cross") ? plot.style_cross : na

VwapStyleHolder = _getLineStyle(VwapStyle)
//CloseStyleHolder = _getLineStyle(CloseStyle)
BandStyleHolder = _getLineStyle(BandStyle)
pvaPlotStyleHolder = _getLineStyle(plotStylePVA)
ppocPlotStyle = _getLineStyle(plotStylePpoc)

TextColor = color.white

_labelText(TF, multiple) => TF + " " + str.tostring(multiple)

dayColor = '#ffcc80'
weekColor = '#00bcd4'
monthColor = '#7b1fa2'

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// --- VWAP 1 ---
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

groupV1 = 'VWAP1'
inlineOptions1 = 'V1 Options'
inlineMain1 = 'main1'
inlineFine1 = 'fine1'

var anchorS1 = input.string(defval = "D", title="VWAP 1 Anchor", options=["None","D", "W", "M", "3M", "6M", "12M"], group=groupV1, inline=inlineMain1)
var anchorOneDefined = anchorS1 != "None"

_oneOffset = input(5, title="Offset", group=groupV1, inline=inlineMain1)
oneTextColor = input.color(color.new(#ffcc80, 40), title="Text", group=groupV1, inline=inlineMain1)
oneVwapColor = input.color(color.new(#ffcc80, 30), title = "VWAP/Close", group=groupV1, inline=inlineMain1)
oneBandColor = input.color(color.new(#090720, 70), title = "Bands", group=groupV1, inline=inlineMain1)
onePpocColor = input.color(color.new(color.white, 75), title = "PPOC", group=groupV1, inline=inlineMain1)
onePvaEdgeColor = input.color(color.new(color.white, 80), title = "PVA Edge", group=groupV1, inline=inlineMain1)
onePvaFillColor = input.color(color.new(color.white, 88), title = "PVA Fill", group=groupV1, inline=inlineMain1)
oneDvaFillColor = input.color(color.new(#87524f, 85), title = "DVA Fill", group=groupV1, inline=inlineMain1)

Sizeholder= size.small
if LabelSize == "medium"
    Sizeholder := size.normal
else if LabelSize == "large"
    Sizeholder := size.large

showOneLines = input(true, title="Lines", group=groupV1, inline=inlineOptions1) and anchorOneDefined
showOneLabels = input(true, title="Labels", group=groupV1, inline=inlineOptions1) and anchorOneDefined
showOneVwap = input(true, title="VWAP", group=groupV1, inline=inlineOptions1) and anchorOneDefined and showOneLines
showOneBands = input(true, title="Bands", group=groupV1, inline=inlineOptions1) and anchorOneDefined and showOneLines
showOnePPOC = input(true, title="PPOC", group=groupV1, inline=inlineOptions1) and anchorOneDefined and showOneLines
showOnePva = input(true, title="PVA", group=groupV1, inline=inlineOptions1) and anchorOneDefined and showOneLines
onePvaFillActive = input(true, title="PVA Fill", group=groupV1, inline=inlineOptions1) and anchorOneDefined
oneDvaFillActive = input(true, title="DVA Fill", group=groupV1, inline=inlineOptions1) and anchorOneDefined
showOneBand1 = input(true, title="B1", group=groupV1, inline=inlineFine1) and showBands and showOneBands
showOneBand2 = input(true, title="B2", group=groupV1, inline=inlineFine1) and showBands and showOneBands
showOneBand3 = input(true, title="B3", group=groupV1, inline=inlineFine1) and showBands and showOneBands
showOneLabelC = input(true, title="LC", group=groupV1, inline=inlineFine1) and showOneLabels
showOneLabel1 = input(true, title="L1", group=groupV1, inline=inlineFine1) and showOneLabels
showOneLabel2 = input(true, title="L2", group=groupV1, inline=inlineFine1) and showOneLabels
showOneLabel3 = input(true, title="L3", group=groupV1, inline=inlineFine1) and showOneLabels

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// --- FUNCTIONS ---
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

setLabelPrice(_label, _price,_offset) =>
    label.set_y(_label,_price)
    label.set_x(_label,bar_index + _offset)

computeVWAP(src, isNewPeriod) =>
	var float sumSrcVol = na
	var float sumVol = na

	sumSrcVol := isNewPeriod ? src * volume : src * volume + sumSrcVol[1]
	sumVol := isNewPeriod ? volume : volume + sumVol[1]
	// sumSrcSrcVol calculates the dividend of the equation that is later used to calculate the standard deviation

	_vwap = sumSrcVol / sumVol

	[_vwap,sumVol]


computeBANDS(src,isNewPeriod,stDevMultiplier,_vwap,sumVol) =>
    var float sumSrcSrcVol = na

    sumSrcSrcVol := isNewPeriod ? volume * math.pow(src, 2) : volume * math.pow(src, 2) + sumSrcSrcVol[1]
	variance = sumSrcSrcVol / sumVol - math.pow(_vwap, 2)
	variance := variance < 0 ? 0 : variance
	stDev = math.sqrt(variance)
	lowerBand = _vwap - stDev * stDevMultiplier
	upperBand = _vwap + stDev * stDevMultiplier

	[lowerBand, upperBand]


is_newbar(res) =>
    if res == 'None'
        false
    else
        t = time(res)
        not na(t) and (na(t[1]) or t > t[1])

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// --- LABEL OFFSETS ---
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// auto position based on whether the other TF labels are visible

__oneOffset = showOneLabels ? _oneOffset : 0

oneOffset = labelOffset + __oneOffset

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// --- PLOTTING VWAP 1 ---
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var label L1V1S1 = (showOneLabel1) ? label.new(bar_index,high,style = label.style_none,text=_labelText(anchorS1, stdevMult), textcolor=oneTextColor, size = Sizeholder) :na
var label L2V1S1 = (showOneLabel1) ? label.new(bar_index,high,style = label.style_none,text=_labelText(anchorS1, stdevMult * -1), textcolor=oneTextColor, size = Sizeholder) :na
var label L1V1S2 = (showOneLabel2) ? label.new(bar_index,high,style = label.style_none,text=_labelText(anchorS1, stdevMult2), textcolor=oneTextColor, size = Sizeholder) :na
var label L2V1S2 = (showOneLabel2) ? label.new(bar_index,high,style = label.style_none,text=_labelText(anchorS1, stdevMult2 * -1), textcolor=oneTextColor, size = Sizeholder) :na
var label L1V1S3 = (showOneLabel3) ? label.new(bar_index,high,style = label.style_none,text=_labelText(anchorS1, stdevMult3), textcolor=oneTextColor, size = Sizeholder) :na
var label L2V1S3 = (showOneLabel3) ? label.new(bar_index,high,style = label.style_none,text=_labelText(anchorS1, stdevMult3 * -1), textcolor=oneTextColor, size = Sizeholder) :na
var label L1V1C = (showOneLabelC) ? label.new(bar_index,high,style = label.style_none,text=anchorS1 + " 0", textcolor=oneTextColor, size = Sizeholder) :na

if barstate.islast and cumVol == 0
    runtime.error("No volume is provided by the data vendor.")

isFirstBarPeriod1 = anchorOneDefined and is_newbar(anchorS1)

var float vwapValueS1 = na
var float onePPOC = na
var float onePVAH = na
var float onePVAL = na
var float oneDVAH = na
var float oneDVAL = na
float upBand2S1 = na
float lowBand2S1 = na
float upBand3S1 = na
float lowBand3S1 = na

if anchorOneDefined
    if showOnePPOC and isFirstBarPeriod1
        onePPOC := vwapValueS1

    if isFirstBarPeriod1 and showOnePva
        onePVAH := oneDVAH
        onePVAL := oneDVAL

    if not (hideonDWM and timeframe.isdwm)
        [_vwap,sumVol] = computeVWAP(hlc3, isFirstBarPeriod1)
        vwapValueS1 := _vwap

        if showOneLabelC
            setLabelPrice(L1V1C,vwapValueS1,oneOffset)

        //if showOneBand1
        [lowerBandValues, upperBandValues] = computeBANDS(hlc3,isFirstBarPeriod1,stdevMult,_vwap,sumVol)
        oneDVAH := upperBandValues
        oneDVAL :=lowerBandValues
        if showOneLabel1
            setLabelPrice(L1V1S1,oneDVAH,oneOffset)
            setLabelPrice(L2V1S1,oneDVAL,oneOffset)

        //if showOneBand2
        [lowerBandValues2, upperBandValues2] = computeBANDS(hlc3,isFirstBarPeriod1,stdevMult2,_vwap,sumVol)
        upBand2S1 := upperBandValues2
        lowBand2S1 :=lowerBandValues2
        if showOneLabel2
            setLabelPrice(L1V1S2,upBand2S1,oneOffset)
            setLabelPrice(L2V1S2,lowBand2S1,oneOffset)

        //if showOneBand3
        [lowerBandValues3, upperBandValues3] = computeBANDS(hlc3,isFirstBarPeriod1,stdevMult3,_vwap,sumVol)
        upBand3S1 := upperBandValues3
        lowBand3S1 :=lowerBandValues3
        if showOneLabel3
            setLabelPrice(L1V1S3,upBand3S1,oneOffset)
            setLabelPrice(L2V1S3,lowBand3S1,oneOffset)

plot(showOneVwap ? vwapValueS1 : na, title="VWAP 1", color=oneVwapColor, offset=0, style = VwapStyleHolder)

oneDvahPlot = plot(showOneBand1 ? oneDVAH : na, title="One DVAH", color=oneBandColor, offset=0, style=BandStyleHolder)
oneDvalPlot = plot(showOneBand1 ? oneDVAL : na, title="One DVAL", color=oneBandColor, offset=0, style=BandStyleHolder)
fill(oneDvalPlot, oneDvahPlot, oneDvaFillActive ? oneDvaFillColor : na, title='One DVA Fill')

plot(showOneBand2 ? upBand2S1 : na, title="One +1.5", color=oneBandColor, offset=0, style =BandStyleHolder)
plot(showOneBand2 ? lowBand2S1 : na, title="One -1.5", color=oneBandColor, offset=0, style =BandStyleHolder)
plot(showOneBand3 ? upBand3S1 : na, title="One +2", color=oneBandColor, offset=0, style =BandStyleHolder)
plot(showOneBand3 ? lowBand3S1 : na, title="One -2", color=oneBandColor, offset=0, style =BandStyleHolder)

onePpocPlot = plot(onePPOC, title="One PPOC", color=onePpocColor, offset=0,style=ppocPlotStyle)
onePvahPlot = plot(onePVAH, title="One PVAH", color=onePvaEdgeColor, offset=0,style=pvaPlotStyleHolder)
onePvalPlot = plot(onePVAL, title="One PVAL", color=onePvaEdgeColor, offset=0,style=pvaPlotStyleHolder)
fill(onePvalPlot, onePvahPlot, onePvaFillActive ? onePvaFillColor : na, title='One PVA Fill')
