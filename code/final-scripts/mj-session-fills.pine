//@version=4

study("MJ - Session FILLS", overlay=true)

COLOR_LIME = #1cd206
COLOR_VOLT = #affd00
COLOR_PINK = #e63a97
COLOR_RED = #f21616
COLOR_LIGHT_BLUE = #3179f5
COLOR_MAGENTA = #d612f8
COLOR_ORANGE = #f57f17
COLOR_GOLD = #ffb74d
COLOR_YELLOW = #ffeb3b
COLOR_TEAL = #00bcd4
COLOR_WHITE = #ffffff
COLOR_BLUE = #1848cc
COLOR_PURPLE = #3e31c4
COLOR_GREY_ONE = #9598a1
COLOR_GREEN = #4caf50
COLOR_ROYAL_BLUE = #1848cc
COLOR_TURQUOISE = #00897b
COLOR_PEACH = #e57373

//////////////////////////////////////////////////////////////////
// 
// ==== DATE UTILS ==== 
// 
//////////////////////////////////////////////////////////////////

int MS_PER_MINUTE = 1000 * 60
int MS_PER_HOUR = MS_PER_MINUTE * 60
int MS_PER_DAY = MS_PER_HOUR * 24

_currentBarTime() => time(timeframe.period)

_calcBarsPerHour() =>
    int barLengthInMinutes = (time - time[1]) / MS_PER_MINUTE
    int barsElapsedThisHour = minute / barLengthInMinutes 
    int barsPerHour = 60 / barLengthInMinutes

_calcBarsPerDay() => _calcBarsPerHour() * 24

_timeElapsedTodayInMs() => (MS_PER_HOUR * hour) - (MS_PER_MINUTE * minute) - (1000 * second)
_timeElapsedThisHourInMs() => (MS_PER_MINUTE * minute) + (1000 * second)

_getTimeAtBeginningOfToday() => timenow - _timeElapsedTodayInMs()
    
_getTimeAtStartOfHourNHoursAgo(numHours) => 
    timeElapsedSinceStartInMs = _timeElapsedThisHourInMs() + (numHours * MS_PER_HOUR)
    timenow - timeElapsedSinceStartInMs

_getStartTimeNDaysBack(numDays) => 
    _getTimeAtBeginningOfToday() - (numDays * MS_PER_DAY)    

_isInSession(timeRange) =>
    not na(time(timeframe.period, timeRange))

//////////////////////////////////////////////////////////////////
// 
// ==== INPUTS ==== 
// 
//////////////////////////////////////////////////////////////////

// -----------------------
// dependencies: dateUtils, plotUtils
// -----------------------

groupOffset = 'Offset'
groupFill = 'Fill'
groupPlotSwitches = 'Plot Switches'
groupLineSwitches = 'Line Switches'
groupBorders = 'Borders'
groupTimeRanges = 'Time Ranges'
groupLineStyle = 'Line Style'
groupLabels = 'Labels'
groupDailyOpenPlot='Daily Open Plot'
groupMarkers='Markers'
groupExtend='Extend Vertically'

// ----------------------------------------------------------------------------------

// tooltips

string TT_PR = "Final time to which the High and Low of the session will be held"
string TT_TZ = "Offsets all time inputs together to help align to preferred timezone"
string TT_LB = "The number of days back to plot the session levels"


maxTimeframeFill = input(title='Max Timeframe - Session Fill', defval=15, maxval=240, minval=1)
maxTimeframeBackgroundShading = input(60, 'Max Timeframe - Background Shading', maxval=240, minval=1)

// switches

fillsActive = input(true, 'Fills Active', group=groupPlotSwitches)

// borders

sessionLevelsBorderPlotStyle = input(plot.style_stepline, 'Border - Plot Style', group=groupBorders, options=[plot.style_circles, plot.style_cross, plot.style_stepline])
borderLineWidth = input(2, 'Border - Line Width', group=groupBorders, options=[1,2,3,4])


_captureSessionLevels(timeRange) => 
    _inSession = _isInSession(timeRange)
    _inHolding = not _inSession

    var float _sessionHigh = na
    var float _sessionLow = na
    var float _sessionOpen = na

    if _inSession //  if we are in session...
        if not _inSession[1] //  if it just started, set the initial values
            _sessionHigh := high
            _sessionLow  := low
            _sessionOpen := open
        else //  otherwise we are checking for higher highs and lower lows to update with and remembering the new levels
            _sessionHigh := max(high, _sessionHigh)
            _sessionLow  := min(low, _sessionLow)

    else if _inHolding //  else if we're in holding state... just reference self to maintain the same levels
        _sessionHigh := _sessionHigh
        _sessionLow  := _sessionLow
        _sessionOpen := _sessionOpen

    else //  not in session or holding, so we can reset.
        _sessionHigh := na
        _sessionLow  := na
        _sessionOpen := na

    [_sessionHigh, _sessionLow, _sessionOpen]

_getLevelsColors(borderColor, inSession, fillColor) => 
    highLowLineColor = inSession ? borderColor : na
    _fillColor = inSession and inSession[1] ? fillColor : na
    [highLowLineColor, _fillColor]    

_getValuesForSessionFillPlotting(timeRange, borderColor, fillColor) => 
    isInSession = _isInSession(timeRange)
    [sessionHigh, sessionLow, sessionOpen] = _captureSessionLevels(timeRange)
    [highLowLineColor, _fillColor] = _getLevelsColors(borderColor, isInSession, fillColor)
    [sessionHigh, sessionLow, highLowLineColor, _fillColor]

_isValidTF(maxTF) => timeframe.isminutes and timeframe.multiplier <= maxTF
isValidFillTF = _isValidTF(maxTimeframeFill)
isValidBgShadeTF = _isValidTF(maxTimeframeBackgroundShading)

_getBgColorForTimeRange(timeRange, isActive, fillColor) => 
    isInSession = _isInSession(timeRange)
    bgColor = isInSession and isActive and isValidBgShadeTF ? fillColor : na

/////////////////////////////////////////////////////////
// 
// --- NOTES ---
// 
/////////////////////////////////////////////////////////

// *** IMPORTANT ***
// the order of fills matters, the last one in gets placed on top (z-index)
    // asia
    // frankfut
    // tokyo
    // hong kong
    // london
    // ny
    // ny premarket
    // brinks shared
    // usa brinks
    // eu brinks
    // last 15
    // weekend


// NY Pre-market 8am-9am
// EU Brinks 3am-4am
// London 3am-11am
// New York 8am-4pm
// US Brinks 9am-10am

// Sydney 5pm-1am (2100-0500)
// Tokyo 7pm-3am (0000-0600)
// Hong Kong (0130-0800)
// Frankfurt 2am-10am (0630-1500)

// fill colors
    // ny marooon #880e4f
    // ny blue #0c3299
    // ny bright red #ad0c0c
    // london purple 1 #1a1736
    // london purple 2 #151048
    // eu brinks white #b2b5be
    // eu brinks purple #9c27b0
    // us brinks orange #ffa726
    // us brinks charcoal #0e1016 100
    // us brinks amber #f57f17 85

/////////////////////////////////////////////////////////
// 
// --- ASIA ---
// 
/////////////////////////////////////////////////////////

fillAsiaSession = input(true, 'Fill - Asia', group=groupPlotSwitches)
extendAsia = input(false, 'Extend - Asia', group=groupExtend)
asiaFillColor = input(color.new(#043c36, 60), 'Fill - Asia', input.color, group=groupFill)
asiaBorderColor = input(color.new(#0b3d37, 90), 'Border - Asia', input.color, group=groupBorders)
asiaTimeRange = input('2100-0500:23456', 'Asia', group=groupTimeRanges, type=input.session)
_asiaInSession = _isInSession(asiaTimeRange)

[asiaHigh, asiaLow, _asiaBorderColor, _asiaFillColor] = _getValuesForSessionFillPlotting(
     asiaTimeRange, 
     asiaBorderColor, 
     asiaFillColor)

asiaPlotHigh = plot(
      fillsActive and fillAsiaSession and isValidFillTF and _asiaInSession ? asiaHigh : na, 
      "Asia High", 
      _asiaBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

asiaPlotLow  = plot(
      fillsActive and fillAsiaSession and isValidFillTF and _asiaInSession ? asiaLow : na, 
      "Asia Low",  
      _asiaBorderColor,  
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

fill(asiaPlotHigh, asiaPlotLow, _asiaFillColor)
bgcolor(_getBgColorForTimeRange(asiaTimeRange, extendAsia, asiaFillColor))

// ---- frankfurt ----

// frankfurtTimeRange = input('0630-1500:23456', group=groupTimeRanges, type=input.session)

/////////////////////////////////////////////////////////
// 
// --- TOKYO ---
// 
/////////////////////////////////////////////////////////

fillTokyoSession = input(true, 'Fill - Tokyo', group=groupPlotSwitches)
extendTokyo = input(false, 'Extend - Tokyo', group=groupExtend)
tokyoFillColor = input(color.new(#7e57c2, 80), 'Fill - Tokyo', input.color, group=groupFill)
tokyoBorderColor = input(color.new(#7e57c2, 90), 'Border - Tokyo', input.color, group=groupBorders)
tokyoTimeRange = input('0000-0130:23456', 'Tokyo', group=groupTimeRanges, type=input.session)
_tokyoInSession = _isInSession(tokyoTimeRange)      

[tokyoHigh, tokyoLow, _tokyoBorderColor, _tokyoFillColor] = _getValuesForSessionFillPlotting(
     tokyoTimeRange, 
     tokyoBorderColor, 
     tokyoFillColor)

tokyoPlotHigh = plot(
      fillsActive and fillTokyoSession and isValidFillTF and _tokyoInSession ? tokyoHigh : na, 
      "Tokyo High", 
      _tokyoBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

tokyoPlotLow  = plot(
      fillsActive and fillTokyoSession and isValidFillTF and _tokyoInSession ? tokyoLow : na, 
      "Tokyo Low",  
      _tokyoBorderColor,  
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

fill(tokyoPlotHigh, tokyoPlotLow, _tokyoFillColor)
bgcolor(_getBgColorForTimeRange(tokyoTimeRange, extendTokyo, tokyoFillColor))

/////////////////////////////////////////////////////////
// 
// --- HONG KONG ---
// 
/////////////////////////////////////////////////////////

// hongKongTimeRange = input('0130-0800:23456', group=groupTimeRanges, type=input.session)

/////////////////////////////////////////////////////////
// 
// --- LONDON ---
// 
/////////////////////////////////////////////////////////

fillLondonSession = input(true, 'Fill - London', group=groupPlotSwitches)
extendLondon = input(false, 'Extend - London', group=groupExtend)
londonFillColor = input(color.new(#261d80, 70), 'Fill - London', input.color, group=groupFill)
londonBorderColor = input(color.new(#1a1736, 90), 'Border - London', input.color, group=groupBorders)
londonTimeRange = input('0700-1630:23456', 'London', group=groupTimeRanges, type=input.session)
_londonInSession = _isInSession(londonTimeRange)

[londonHigh, londonLow, _londonBorderColor, _londonFillColor] = _getValuesForSessionFillPlotting(
     londonTimeRange, 
     londonBorderColor, 
     londonFillColor)

londonPlotHigh = plot(
      fillsActive and fillLondonSession and isValidFillTF and _londonInSession ? londonHigh : na, 
      "London Session High", 
      _londonBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)
      
londonPlotLow  = plot(
      fillsActive and fillLondonSession and isValidFillTF and _londonInSession ? londonLow : na,  
      "London Low",  
      _londonBorderColor,  
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

fill(londonPlotHigh, londonPlotLow, _londonFillColor)
bgcolor(_getBgColorForTimeRange(londonTimeRange, extendLondon, londonFillColor))

/////////////////////////////////////////////////////////
// 
// --- NEW YORK ---
// 
/////////////////////////////////////////////////////////

fillNySession = input(true, 'Fill - NY', group=groupPlotSwitches)
extendNy = input(false, 'Extend - NY', group=groupExtend)
nyFillColor = input(color.new(#ad0c0c, 90), 'Fill - New York', input.color, group=groupFill)
nyBorderColor = input(color.new(#880e4f, 90), 'Border - New York', input.color, group=groupBorders)
nyTimeRange = input('1300-2100:23456', 'New York', group=groupTimeRanges, type=input.session)
_nyInSession = _isInSession(nyTimeRange)

[nyHigh, nyLow, _nyBorderColor, _nyFillColor] = _getValuesForSessionFillPlotting(
      nyTimeRange, 
      nyBorderColor, 
      nyFillColor)

nyPlotHigh = plot(
      fillsActive and fillNySession and isValidFillTF and _nyInSession ? nyHigh : na, 
      "New York Session High", 
      _nyBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

nyPlotLow  = plot(
      fillsActive and fillNySession and isValidFillTF and _nyInSession ? nyLow : na,  
      "New York Session Low",  
      _nyBorderColor,  
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

bgcolor(_getBgColorForTimeRange(nyTimeRange, extendNy, nyFillColor))
fill(nyPlotHigh, nyPlotLow, _nyFillColor)

/////////////////////////////////////////////////////////
// 
// --- BRINKS SHARED ---
// 
/////////////////////////////////////////////////////////

extendBrinks = input(false, 'Extend - Brinks', group=groupExtend)
brinksBorderColor = input(color.new(#b2b5be, 90), 'Border - Brinks', group=groupBorders)

/////////////////////////////////////////////////////////
// 
// --- EU BRINKS ---
// 
/////////////////////////////////////////////////////////

fillEuBrinks = input(true, 'Fill - EU Brinks', group=groupPlotSwitches)
euBrinksFillColor = input(color.new(#9c27b0, 80), 'Fill - EU Brinks', group=groupFill)
euBrinksTimeRange = input('0700-0801:23456', 'EU Brinks', group=groupTimeRanges, type=input.session)
_euBrinksInSession = _isInSession(euBrinksTimeRange)

[euBrinksHigh, euBrinksLow, _euBrinksBorderColor, _euBrinksFillColor] = _getValuesForSessionFillPlotting(
      euBrinksTimeRange, 
      brinksBorderColor, 
      euBrinksFillColor)

euBrinksPlotHigh = plot(
      fillsActive and fillEuBrinks and isValidFillTF and _euBrinksInSession ? euBrinksHigh : na, 
      "EU Brinks High", 
      _euBrinksBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

euBrinksPlotLow  = plot(
      fillsActive and fillEuBrinks and isValidFillTF and _euBrinksInSession ? euBrinksLow : na,  
      "EU Brinks Low", 
      _euBrinksBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

bgcolor(_getBgColorForTimeRange(euBrinksTimeRange, extendBrinks, euBrinksFillColor))
fill(euBrinksPlotHigh, euBrinksPlotLow, _euBrinksFillColor)

/////////////////////////////////////////////////////////
// 
// --- USA BRINKS ---
// 
/////////////////////////////////////////////////////////

fillUsaBrinks = input(true, 'Fill - USA Brinks', group=groupPlotSwitches)
usaBrinksFillColor = input(color.new(#f57f17, 85), 'Fill - USA Brinks', group=groupFill)
usaBrinksTimeRange = input('1300-1401:23456', 'USA Brinks', group=groupTimeRanges, type=input.session)
_usaBrinksInSession = _isInSession(usaBrinksTimeRange)

[usaBrinksHigh, usaBrinksLow, _usaBrinksBorderColor, _usaBrinksFillColor] = _getValuesForSessionFillPlotting(
      usaBrinksTimeRange, 
      brinksBorderColor, 
      usaBrinksFillColor)

usaBrinksPlotHigh = plot(
      fillsActive and fillUsaBrinks and isValidFillTF and _usaBrinksInSession ? usaBrinksHigh : na, 
      "USA Brinks High", 
      _usaBrinksBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

usaBrinksPlotLow  = plot(
      fillsActive and fillUsaBrinks and isValidFillTF and _usaBrinksInSession ? usaBrinksLow : na,  
      "USA Brinks Low", 
      _usaBrinksBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

fill(usaBrinksPlotHigh, usaBrinksPlotLow, _usaBrinksFillColor)
bgcolor(_getBgColorForTimeRange(usaBrinksTimeRange, extendBrinks, usaBrinksFillColor))

/////////////////////////////////////////////////////////
// 
// --- NEW YORK PREMARKET ---
// 
/////////////////////////////////////////////////////////

fillNyPremarket = input(true, 'Fill - NY Premarket', group=groupPlotSwitches)
extendNyPremarket = input(false, 'Extend - NY Premarket', group=groupExtend)
nyPremarketFillColor = input(color.new(#0097a7, 80), 'Fill - NY Premarket', group=groupFill)
nyPremarketBorderColor = input(color.new(#0097a7, 90), 'Border - NY Premarket', group=groupBorders)
nyPreMarketTimeRange = input('1200-1301:23456', 'NY Premarket', group=groupTimeRanges, type=input.session)
_nyPremarketInSession = _isInSession(nyPreMarketTimeRange)

[nyPremarketHigh, nyPremarketLow, _nyPremarketBorderColor, _nyPremarketFillColor] = _getValuesForSessionFillPlotting(
      nyPreMarketTimeRange, 
      nyPremarketBorderColor, 
      nyPremarketFillColor)

nyPremarketPlotHigh = plot(
      fillsActive and fillNyPremarket and isValidFillTF and _nyPremarketInSession ? nyPremarketHigh : na, 
      "NY Premarket High", 
      _nyPremarketBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

nyPremarketPlotLow = plot(
      fillsActive and fillNyPremarket and isValidFillTF and _nyPremarketInSession ? nyPremarketLow : na, 
      "NY Premarket Low", 
      _nyPremarketBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

fill(nyPremarketPlotHigh, nyPremarketPlotLow, _nyPremarketFillColor)
bgcolor(_getBgColorForTimeRange(nyPreMarketTimeRange, extendNyPremarket, nyPremarketFillColor))      

/////////////////////////////////////////////////////////
// 
// --- LAST 15 MINUTES OF THE DAY ---
// 
/////////////////////////////////////////////////////////

extendLast15 = input(true, 'Extend - Last 15 min', group=groupExtend)
fillLast15 = input(false, 'Fill - Last 15 min of day', group=groupPlotSwitches)
last15FillColor = input(color.new(#f57f17, 90), 'Fill - Last 15 min of day', group=groupFill)
last15BorderColor = input(color.new(#f57f17, 90), 'Border - Last 15 min of day', group=groupBorders)
last15TimeRange = input('2345-0001:1234567', 'Last 15min of day', group=groupTimeRanges, type=input.session)
_last15InSession = _isInSession(last15TimeRange)

[last15High, last15Low, _last15BorderColor, _last15FillColor] = _getValuesForSessionFillPlotting(
      last15TimeRange, 
      last15BorderColor, 
      last15FillColor)

last15PlotHigh = plot(
      fillsActive and fillLast15 and isValidFillTF and _last15InSession ? last15High : na, 
      "Last 15 Minutes of Day High", 
      _last15BorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

last15PlotLow  = plot(
      fillsActive and fillLast15 and isValidFillTF and _last15InSession ? last15Low : na,  
      "Last 15 Minutes of Day Low", 
      _last15BorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

fill(last15PlotHigh, last15PlotLow, _last15FillColor)
bgcolor(_getBgColorForTimeRange(last15TimeRange, extendLast15, last15FillColor))

/////////////////////////////////////////////////////////
// 
// --- WEEKEND ---
// 
/////////////////////////////////////////////////////////

fillWeekend = input(true, 'Fill - Weekend', group=groupPlotSwitches)
weekendFillColor = input(color.new(#2c323a, 70), 'Fill - Weekend', group=groupFill)
weekendBorderColor = input(color.new(#434651, 90), 'Border - Weekend', group=groupBorders)
weekendTimeRange = input('2100-2100:17', 'Weekend', group=groupTimeRanges, type=input.session)
_weekendInSession = _isInSession(weekendTimeRange)

[weekendHigh, weekendLow, _weekendBorderColor, _weekendFillColor] = _getValuesForSessionFillPlotting(
      weekendTimeRange, 
      weekendBorderColor, 
      weekendFillColor)

weekendPlotHigh = plot(
      fillsActive and fillWeekend and isValidFillTF and _weekendInSession ? weekendHigh : na, 
      "Weekend High", 
      _weekendBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

weekendPlotLow  = plot(
      fillsActive and fillWeekend and isValidFillTF and _weekendInSession ? weekendLow : na,  
      "Weekend Low", 
      _weekendBorderColor, 
      borderLineWidth, 
      sessionLevelsBorderPlotStyle)

fill(weekendPlotHigh, weekendPlotLow, _weekendFillColor)