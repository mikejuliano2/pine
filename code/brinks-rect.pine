int lookbackMins = (12 * 60)


get_session (sessionText) =>
    time(timeframe.period, sessionText)

get_isInSession (session) =>
    isInSession = not na(session)

_getPositionTopAndBottom (begin_index, to_index) =>
    float pT = 0
    float pB = high

    for i = begin_index to to_index
        pT := max(high[i], pT)
        pB := min(low[i], pB)

    [pT, pB]

create_marketRect (sessionTime, sessionDuration, t, col) =>
    bool is_inSession = get_isInSession(sessionTime)
    string style = rectStyle == "Dashed" ? line.style_dashed : line.style_solid

    if (is_inSession)
        int minsLen = round(sessionDuration / timeframe.multiplier)
        int begin_index = 0

        for i = 1 to minsLen
            if (not na(sessionTime[i]))
                begin_index := begin_index + 1

        int pR = bar_index
        int pL = bar_index - begin_index
        [pT, pB] = _getPositionTopAndBottom(1, begin_index)
        float range = (pT - pB)

        //line_r = line.new(pR, pT, pR, pB, style=style, color=col)
        //line_l = line.new(pL, pT, pL, pB, style=style, color=col)
        line_t = line.new(pL, pT, pR, pT, style=style, color=col)
        line_b = line.new(pL, pB, pR, pB, style=style, color=col)

        //line.delete(line_r[1])
        //line.delete(line_l[1])
        line.delete(line_t[1])
        line.delete(line_b[1])

        if (show_label)
            line_label = label.new(pL, pT, t, textcolor=col, style=label.style_none, size=size.normal)
            label.delete(line_label[1])


create_marketRect('1500-1600', lookbackMins, 'NY Brinks', color.new(color.white, 5))